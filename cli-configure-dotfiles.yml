# This role installs my [dotfiles](https://github.com/jan-warchol/dotfiles).
# Basically, the dotfiles repository should contain only user configuration
# that is common to all my accounts, and is reasonable to track as plain
# text files.  In particular, nothing here should depend on any ansible
# group_vars or host_vars.
#
# Any configs that don't meet these requirements (system-wide settings, GUI
# settings that live in binary files or unwieldy XMLs, etc.) should be
# managed by some other means.  In particular, settings that differ between
# accounts live in `user-config` role.

- hosts: all
  vars:
    dotfiles_repo: jan-warchol/dotfiles.git

  tasks:

    - name: check for dotfiles
      stat: path={{ dotfiles_home }}
      register: dotfiles

    # My dotfiles installation script is not idempotent, so we must skip
    # installation tasks if the dotfiles are already present.
    # TODO
    # Note that I initially clone using https and later change the protocol
    # to SSH.  This is because my SSH keys may not be present when cloning,
    # and because I need different urls for work account SSH configuration.
    - name: clone dotfiles
      git:
        repo: "https://github.com/{{ dotfiles_repo }}"
        dest: "{{ dotfiles_home }}"
        version: devel
        force: no
      when: dotfiles.stat.exists == false

    - name: configure git user email
      git_config:
        key: user.email
        value: jan.warchol@gmail.com
        repo: "{{ dotfiles_home }}"

    - name: install dotfiles
      shell: >
        {{ dotfiles_home }}/.install-dotfiles.sh
        creates=~/.config/dotfiles-git-dir
      when: dotfiles.stat.exists == false
      register: dotfiles_installation

    - name: report installation results
      debug: var=dotfiles_installation.stdout_lines
      when: dotfiles_installation.changed

    - name: update remote url to use SSH protocol
      lineinfile:
        dest: "{{ dotfiles_home }}/config"
        line: "	url = git@github.com:{{ dotfiles_repo }}"
        regexp: "url = .*{{ dotfiles_repo }}"

    - name: template locations file
      copy:
        content: |
          export FZF_HOME={{ fzf_home }}
          export FZF_HISTORY={{ fzf_history }}
          export FZF_VIM_HISTORY={{ fzf_vim_history }}
          export DOTFILES_HOME={{ dotfiles_home }}
          export ANSIBLE_SETUP_PATH={{ ansible_setup_path }}
          export PASSWORD_STORE_DIR={{ passwordstore_path }}
        dest: ~/.config/bash/00-paths-override.sh

    - name: let git ignore changes in README
      command: git update-index --assume-unchanged ~/README.md
      environment:
        GIT_DIR: "{{ dotfiles_home }}"
        GIT_WORK_TREE: "{{ ansible_env.HOME }}"
      register: git_status
      failed_when:
        - git_status is failed
        - "'Unable to mark file README.md' not in git_status.stderr"

      # I don't want README (meant for github) to pollute my actual home dir
    - name: hide dotfiles README
      shell: mv --backup=numbered ~/README.md ~/.README.md
      register: mv_status
      changed_when: not mv_status is failed
      failed_when:
        - mv_status is failed
        - "'No such file or directory' not in mv_status.stderr"
